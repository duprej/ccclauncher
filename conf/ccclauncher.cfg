# General section
# ---------------
# datasource=[db|csv] 
# Select the datasource method.
# db : centralized CCCweb Postgres DB
# csv : local CSV file
# 
# hostname=[string]
# By default leave it empty ! It will use the real hostname to filter and search
# jukeboxes configuration in the datasource. Enter another hostname to bypass this
# and start a configuration of an another host. 
# Essentialy used for testing/debugging.
[general]
datasource=csv
hostname=

# Files section
# -------------
# csv=[string] CSV datasource filename. Default: /etc/cccchangers.csv
# pid=[string] PID file. Default: /var/run/cccpivot.pids
# pivot=[string] Pivot Node.js file to launch. Default: /opt/cccpivot/pivot.js
[files]
csv=/etc/cccchangers.csv
pid=/var/run/cccpivot.pids
pivot=/opt/cccpivot/pivot.js

# Database section
# ----------------
# The Perl script needs to connect to a CCCweb DB
# to know which jukeboxes are connected to the computer and start associated
# Node.js server script instances. One pivot script launched by physical
# jukebox / serial connection.
# First : Configure/Declare jukeboxes in the DB via the CCCweb application.
# Second : Start cccpivot service which reads the jukeboxes configuration in DB
# for this hostname.
# Third : Use CCCweb to manage and play CDs :)
#
# Please enter valid PostgreSQL connection parameters and credentials.
# Role cccmanager is already created when using the SQL CCCweb creation database
# script. The password is the default one too.
[database]
name=ccc
host=192.168.0.12
port=5432
user=ccclauncher
password=ccclauncher

# Log section
# -----------
# debug=[true|false] 
# Disable/Enable the debug mode. Every client connection, commands and responses
# are logged. DO NOT Enable in production : heavy logs will be created. 
#
# directory=[string]
# Directory to store manager's logs and Node.js running scripts logs.
[logs]
debug=false
directory=/var/log/cccpivot/

# SSL section (optionnal)
# -----------------------
# Only used when useTLS field is true in manager.csv file.
# directory=/opt/cccpivot/ (Directory where .pem files are located)
# keyfile=key.pem (Private key filename)
# certfile=cert.pem (Certificate filename)
# passphrase=cccpivot (Passphrase for private key)
[ssl]
directory=/opt/cccpivot/
keyfile=key.pem
certfile=cert.pem
passphrase=cccpivot
